/*=============================================================================

  Matt Rasmussen
  Copyright 2007-2011

  Common sequence functions

=============================================================================*/


#include "seq.h"

namespace spidir {


const int dna2int [256] = 
{
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 9
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 19
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 29
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 39
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 49
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 59
    -1, -1, -1, -1, -1,  0, -1,  1, -1, -1,   // 69
    -1,  2, -1, -1, -1, -1, -1, -1, -1, -1,   // 79
    -1, -1, -1, -1,  3, -1, -1, -1, -1, -1,   // 89
    -1, -1, -1, -1, -1, -1, -1,  0, -1,  1,   // 99
    -1, -1, -1,  2, -1, -1, -1, -1, -1, -1,   // 109
    -1, -1, -1, -1, -1, -1,  3, -1, -1, -1,   // 119
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 129
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 139
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 149
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 159
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 169
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 179
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 189
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 199
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 209
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 219
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 229
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 239
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,   // 249
    -1, -1, -1, -1, -1, -1                    // 255
};

const char *int2dna = "ACGT";

int dnatype[] = { 
    DNA_PURINE,     // A
    DNA_PRYMIDINE,  // C
    DNA_PURINE,     // G
    DNA_PRYMIDINE   // T
};    


// compute background frequencies
void computeBgfreq(int nseqs, char **seqs, float *bgfreq)
{
    // initialize with pseudo counts
    for (int i=0; i<4; i++)
        bgfreq[i] = 1.0;    

    int count = 4;

    for (int i=0; i<nseqs; i++) {
        for (char *c=seqs[i]; *c; c++) {
            int d = dna2int[(int) *c];
            if (d != -1) {
                count++;
                bgfreq[d] += 1.0;
            }
        }
    }

    // normalize
    for (int i=0; i<4; i++)
        bgfreq[i] /= count;
}


} // namespace spidir
